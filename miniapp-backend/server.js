require('dotenv').config();
const express = require('express');
const sendBugReportEmail = require('./services/mailer');
const path = require('path');

const Stripe = require('stripe');
const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –í–ê–ñ–õ–ò–í–û: —Ç–µ–ø–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ public/
app.use(express.static(path.join(__dirname, 'public')));

const cors = require('cors');

const BASE_URL = process.env.BASE_URL || 'http://localhost:3000';

app.use(cors({
    origin: '*',
    methods: ['GET', 'POST'],
    allowedHeaders: ['Content-Type']
}));

app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="uk">
    <head>
      <meta charset="UTF-8">
      <title>Unity MiniApp</title>
    </head>
    <body>
      <h1>Unity Telegram MiniApp</h1>
      <p>–°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î! üöÄ</p>
    </body>
    </html>
  `);
});

app.post('/bug-report', async (req, res) => {
  const { title, description } = req.body;
  try {
    await sendBugReportEmail(`–ó–≤—ñ—Ç –ø—Ä–æ –ø–æ–º–∏–ª–∫—É: ${title}`, description);
    res.status(200).send('Bug report –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!');
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email:', error);
    res.status(500).send('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–≤—ñ—Ç');
  }
});

// --------- Stripe Checkout ---------
app.post('/create-checkout-session', async (req, res) => {
  try {
    const { amount } = req.body; // –æ—Ç—Ä–∏–º—É—î–º–æ —Å—É–º—É –≤—ñ–¥ Unity
    if (!amount || amount <= 0) {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å—É–º–∞' });
    }

    const session = await stripe.checkout.sessions.create({
      payment_method_types: ['card'],
      mode: 'payment',
      line_items: [
        {
          price_data: {
            currency: 'usd',
            product_data: { name: 'Unity Game Purchase' },
            unit_amount: amount, // —Å—É–º–∞ –≤ —Ü–µ–Ω—Ç–∞—Ö
          },
          quantity: 1,
        },
      ],
      success_url: `${BASE_URL}/success.html`,
      cancel_url: `${BASE_URL}/cancel.html`,
    });

    res.json({ url: session.url });
  } catch (error) {
    console.error("Stripe error:", error);
    res.status(500).json({ error: error.message });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on ${BASE_URL}`));
